{"version":3,"file":"start-work-day.bundle.js","mappings":"AAAAA,GAAGC,UAAU,6BAEbD,GAAGE,KAAKC,QAAQC,aAAe,CAC3BC,QAAS,CAAC,OAAQ,UAElBC,KAAM,WACF,IAAKN,GAAGO,SAAU,OAAO,EAEzB,IAAMC,EAAOC,KAEbT,GAAGO,SAASG,UAAUC,aAAeX,GAAGO,SAASG,UAAUE,MAE3DZ,GAAGO,SAASG,UAAUE,MAAQ,SAAUC,EAAQC,EAAMC,EAAUC,GAG5D,GAFAC,QAAQC,MAAM,oBAAqBL,IAE9BL,EAAKH,QAAQc,SAASN,GAEvB,OADAJ,KAAKE,aAAaE,EAAQC,EAAMC,EAAUC,IACnC,EAGX,IAAMI,EAAqB,SAAXP,EAEVQ,EAAYD,EAAU,sBAAwB,2BAC9CE,EAAUF,EAAU,SAAW,aAC/BG,EAAcH,EACd,+GACA,uHAEAI,EAAQxB,GAAGyB,mBAAmBC,OAAO,QAAS,GAAI,CACpDC,UAAW,qCACXC,UAAU,EACVC,YAAa,GACbC,UAAW,EACXC,SAAS,EACTC,WAAW,EACXC,YAAY,EACZC,UAAW,CAAEC,MAAO,OAAQC,IAAK,QACjCC,MAAO,IACPC,UAAW,IACXC,SAAUlB,EACVmB,QAASjB,EACTkB,QAAS,CACL,IAAIzC,GAAG0C,kBAAkB,CACrBC,KAAMrB,EACNsB,GAAI,YACJjB,UAAW,wBACXkB,OAAQ,CACJC,MAAO,WACH9C,GAAGO,SAASG,UAAUC,aAAaE,EAAQC,EAAMC,EAAUC,GAC3DQ,EAAMuB,OACV,KAGR,IAAI/C,GAAG0C,kBAAkB,CACrBC,KAAM,WACNC,GAAI,aACJjB,UAAW,6BACXkB,OAAQ,CACJC,MAAO,WACHtB,EAAMuB,QACN/C,GAAGE,KAAKC,QAAQC,aAAa4C,gBACjC,QAMhBxB,EAAMyB,MACV,CACJ,EAEAD,eAAgB,WACZ,IAAME,EAAelD,GAAG,gBAClBmD,EAAenD,GAAG,qCAOxB,GALIkD,IACAlD,GAAGoD,MAAMF,EAAc,UAAW,QAClClD,GAAGqD,YAAYH,EAAc,WAG7BC,EAAc,CACd,IAAMG,EAAatD,GAAGuD,UAAUJ,EAAc,CAAExB,UAAW,gBAAiB,GACxE2B,GACAtD,GAAGqD,YAAYC,EAAY,cAEnC,CACJ,GAGJtD,GAAGwD,OAAM,WACLxD,GAAGE,KAAKC,QAAQC,aAAaE,MACjC","sources":["webpack://start-work-day/./src/start-work-day.js"],"sourcesContent":["BX.namespace('Otus.Timeman.StartWorkDay');\n\nBX.Otus.Timeman.StartWorkDay = {\n    actions: ['open', 'reopen'],\n\n    init: function () {\n        if (!BX.CTimeMan) return false;\n\n        const self = this;\n\n        BX.CTimeMan.prototype.QueryPrimary = BX.CTimeMan.prototype.Query;\n\n        BX.CTimeMan.prototype.Query = function (action, data, callback, bForce) {\n            console.error('[Timeman Action]:', action);\n\n            if (!self.actions.includes(action)) {\n                this.QueryPrimary(action, data, callback, bForce);\n                return false;\n            }\n\n            const isStart = action === 'open';\n\n            const titleText = isStart ? 'Начало рабочего дня' : 'Продолжение рабочего дня';\n            const btnText = isStart ? 'Начать' : 'Продолжить';\n            const contentText = isStart\n                ? 'Вы собираетесь начать рабочий день. Нажмите \"Начать\", чтобы подтвердить, или \"Отменить\", чтобы закрыть окно.'\n                : 'Вы собираетесь продолжить рабочий день. Нажмите \"Продолжить\", чтобы подтвердить, или \"Отменить\", чтобы закрыть окно.';\n\n            const popup = BX.PopupWindowManager.create('popup', '', {\n                className: 'bx-timeman-start-work-popup-window',\n                autoHide: true,\n                offsetLeft: -60,\n                offsetTop: 8,\n                overlay: true,\n                draggable: false,\n                closeByEsc: true,\n                closeIcon: { right: '10px', top: '20px' },\n                width: 380,\n                maxHeight: 300,\n                titleBar: titleText,\n                content: contentText,\n                buttons: [\n                    new BX.PopupWindowButton({\n                        text: btnText,\n                        id: 'start-btn',\n                        className: 'ui-btn ui-btn-success',\n                        events: {\n                            click: function () {\n                                BX.CTimeMan.prototype.QueryPrimary(action, data, callback, bForce);\n                                popup.close();\n                            },\n                        },\n                    }),\n                    new BX.PopupWindowButton({\n                        text: 'Отменить',\n                        id: 'cancel-btn',\n                        className: 'ui-btn ui-btn-light-border',\n                        events: {\n                            click: function () {\n                                popup.close();\n                                BX.Otus.Timeman.StartWorkDay.closeTimePopup();\n                            },\n                        },\n                    }),\n                ],\n            });\n\n            popup.show();\n        };\n    },\n\n    closeTimePopup: function () {\n        const timemanBlock = BX('timeman_main');\n        const popupContent = BX('popup-window-content-timeman_main');\n\n        if (timemanBlock) {\n            BX.style(timemanBlock, 'display', 'none');\n            BX.removeClass(timemanBlock, '--open');\n        }\n\n        if (popupContent) {\n            const waitButton = BX.findChild(popupContent, { className: 'ui-btn-wait' }, true);\n            if (waitButton) {\n                BX.removeClass(waitButton, 'ui-btn-wait');\n            }\n        }\n    },\n};\n\nBX.ready(function () {\n    BX.Otus.Timeman.StartWorkDay.init();\n});\n"],"names":["BX","namespace","Otus","Timeman","StartWorkDay","actions","init","CTimeMan","self","this","prototype","QueryPrimary","Query","action","data","callback","bForce","console","error","includes","isStart","titleText","btnText","contentText","popup","PopupWindowManager","create","className","autoHide","offsetLeft","offsetTop","overlay","draggable","closeByEsc","closeIcon","right","top","width","maxHeight","titleBar","content","buttons","PopupWindowButton","text","id","events","click","close","closeTimePopup","show","timemanBlock","popupContent","style","removeClass","waitButton","findChild","ready"],"sourceRoot":""}